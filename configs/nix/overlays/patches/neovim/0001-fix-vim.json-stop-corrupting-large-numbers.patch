From 94ff5f6322743e986fd1e5f207465c7c7198fdf8 Mon Sep 17 00:00:00 2001
From: Jade Lovelace <jadel@mercury.com>
Date: Thu, 10 Jul 2025 18:33:58 -0700
Subject: [PATCH] fix(vim.json): stop corrupting large numbers

Problem: multiple DAP servers keep assuming they can have internal IDs
         up to 2**52, which get corrupted by the Neovim JSON encoder.
Solution: change (1) constant and add a test so nobody breaks it while
          updating the library.

Fixes: https://github.com/neovim/neovim/issues/24532
Fixes: https://github.com/mfussenegger/nvim-dap/issues/1534
Fixes: https://github.com/facebook/buck2/issues/1032
---
 src/cjson/lua_cjson.c             | 2 +-
 test/functional/lua/json_spec.lua | 2 ++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/cjson/lua_cjson.c b/src/cjson/lua_cjson.c
index 3119ffc2d7..0acdfab2e3 100644
--- a/src/cjson/lua_cjson.c
+++ b/src/cjson/lua_cjson.c
@@ -82,7 +82,7 @@
 #define DEFAULT_ENCODE_INVALID_NUMBERS 0
 #define DEFAULT_DECODE_INVALID_NUMBERS 1
 #define DEFAULT_ENCODE_KEEP_BUFFER 1
-#define DEFAULT_ENCODE_NUMBER_PRECISION 14
+#define DEFAULT_ENCODE_NUMBER_PRECISION 16
 #define DEFAULT_ENCODE_EMPTY_TABLE_AS_OBJECT 0
 #define DEFAULT_DECODE_ARRAY_WITH_ARRAY_MT 0
 #define DEFAULT_ENCODE_ESCAPE_FORWARD_SLASH 1
diff --git a/test/functional/lua/json_spec.lua b/test/functional/lua/json_spec.lua
index e4a1df1d4c..be13b4e2e4 100644
--- a/test/functional/lua/json_spec.lua
+++ b/test/functional/lua/json_spec.lua
@@ -77,6 +77,7 @@ describe('vim.json.decode()', function()
     eq(-100000, exec_lua([[return vim.json.decode('  -100000  ')]]))
     eq(0, exec_lua([[return vim.json.decode('0')]]))
     eq(0, exec_lua([[return vim.json.decode('-0')]]))
+    eq(3053700806959403, exec_lua([[return vim.json.decode('3053700806959403')]]))
   end)
 
   it('parses floating-point numbers', function()
@@ -208,6 +209,7 @@ describe('vim.json.encode()', function()
   end)
 
   it('dumps floats', function()
+    eq('3053700806959403', exec_lua([[return vim.json.encode(3053700806959403)]]))
     eq('10.5', exec_lua([[return vim.json.encode(10.5)]]))
     eq('-10.5', exec_lua([[return vim.json.encode(-10.5)]]))
     eq('-1e-05', exec_lua([[return vim.json.encode(-1e-5)]]))
-- 
2.49.0

