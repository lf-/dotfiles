export RUST_BACKTRACE=1

# dirty hacks
if [[ -z "$SSH_AUTH_SOCK" && $HOST == "tail-bot" ]]; then
    export SSH_AUTH_SOCK=/tmp/$USER/ssh-agent.sock
fi

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# Set up Nix only on SSH connections
# See: https://github.com/DeterminateSystems/nix-installer/pull/714
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ] && [ -n "${SSH_CONNECTION}" ] && [ "${SHLVL}" -eq 1 ]; then
    . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi
# End Nix

# Workaround for using zsh from nix on macOS/non-NixOS Linux.
# This is normally done by programs.zsh.enable.
if [[ -z "${__ETC_ZSHENV_SOURCED:-}" ]]; then
    # Tell zsh how to find installed completions.
    for p in ''${(z)NIX_PROFILES}; do
        fpath=($p/share/zsh/site-functions $p/share/zsh/$ZSH_VERSION/functions $p/share/zsh/vendor-completions $fpath)
    done
fi
